git stash
git stash list
git stash -h
git stash apply (aplica los ultimos cambios en la pila del stash)
git stash drop (borra stash)
git stash clear (Elimina todo lo que esta en el stash)

git stash save "comentario que aparecera en la pila de stash"
git stash show [stash] (muestra los cambios)

php artisan make:model ModalitiesPivotPhysiotherapyVisit --controller --migration --api
php artisan make:model PhysiotherapyVisit --controller --migration

php artisan make:request Api/Visit/StoreFamilyCommitmentSocialWorkerVisitRequest

php artisan tenants:migrate --path="database/migrations/tenant/2023_08_30_130427_create_routine_pivot_membership_visits_table.php"

php artisan tenants:rollback --step=1

php artisan make:migration add_location_to_app_modules_table --table=app_modules

php artisan tenants:seed --class=CompanyEvaluationSeeder

php artisan make:model RoutinePivotMembershipVisits --migration

php artisan tenants:seed --class=ModulesSeeder

git reset --soft HEAD~

composer install --ignore-platform-reqs

return $visit->membershipNursingVisit->routinePivotMembershipVisit()
            ->with('routineSchedules')->get()
            ->transform(function ($routineSchedule) {
                return [
                    'id' => $routineSchedule->id,
                    'order' => $routineSchedule->routineSchedules->orden,
                    'activity' => $routineSchedule->activity,
                    'text' => $routineSchedule->routineSchedules->texto,
                ];
            });

$rules = [
        'payout_method' => 'required:in,bankTransfer,paypal',
        'paypal_email'  => 'required_if:payout_method,paypal|email',
        'receiver'      => 'required_if:payout_method,bankTransfer|max:45',
        'bic'           => 'required_if:payout_method,bankTransfer|max:15|bic',
    ];


$result = $initial ?: 'default'; // true => $initial and false => 'default'

return StageNotification::whereHas('event.user', function ($query) {
            return $query->where('id', user()->id);
        })->where(function ($query) {
            $query->whereNotNull('confirm_shift_answered_at')->whereNotIn('stage_id', [1, 3]);
        })->with('event')->get();



        return $activeMedicineCard
            ->activeNewMedicineCardDetails()
            ->has('medicationLog')
            ->whereDate('fecha_fin', '>=', now())
            ->with('medicine', 'medicineCard', 'schedule')
            ->with(['medicationLog' => function ($query) {
                return $query->orderBy('updated_at', 'ASC');
            }])
            ->orderByDesc(MedicationLog::select('updated_at')->latest('updated_at')->limit(1)
                ->whereColumn('medication_log.medicine_card_detail_id', 'tarjeta_medicamentos_detalle.id')
            )
            ->paginate(3);