return $visit->membershipNursingVisit->routinePivotMembershipVisit()
            ->with('routineSchedules')->get()
            ->transform(function ($routineSchedule) {
                return [
                    'id' => $routineSchedule->id,
                    'order' => $routineSchedule->routineSchedules->orden,
                    'activity' => $routineSchedule->activity,
                    'text' => $routineSchedule->routineSchedules->texto,
                ];
            });

$rules = [
        'payout_method' => 'required:in,bankTransfer,paypal',
        'paypal_email'  => 'required_if:payout_method,paypal|email',
        'receiver'      => 'required_if:payout_method,bankTransfer|max:45',
        'bic'           => 'required_if:payout_method,bankTransfer|max:15|bic',
    ];


return StageNotification::whereHas('event.user', function ($query) {
            return $query->where('id', user()->id);
        })->where(function ($query) {
            $query->whereNotNull('confirm_shift_answered_at')->whereNotIn('stage_id', [1, 3]);
        })->with('event')->get();



        return $activeMedicineCard
            ->activeNewMedicineCardDetails()
            ->has('medicationLog')
            ->whereDate('fecha_fin', '>=', now())
            ->with('medicine', 'medicineCard', 'schedule')
            ->with(['medicationLog' => function ($query) {
                return $query->orderBy('updated_at', 'ASC');
            }])
            ->orderByDesc(MedicationLog::select('updated_at')->latest('updated_at')->limit(1)
                ->whereColumn('medication_log.medicine_card_detail_id', 'tarjeta_medicamentos_detalle.id')
            )
            ->paginate(3);